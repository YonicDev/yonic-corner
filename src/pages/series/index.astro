---
import { getImage } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import type { GetImageResult } from "astro";

import { HIDE_DRAFTS_IN_DEVELOPMENT } from "@lib/settings";

import Layout from "@lib/layouts/Layout.astro";

const series = await getCollection("series");

---

<Layout title="Series">
    <main>
        <div class="hero">
            <h1>Series</h1>
            <p>
                Ever had problems trying to locate the next part of a post? 
                In my blog, I've implemented a way to group all posts in Series that tell a whole story
                so you can read it more conveniently.
            </p>
        </div>
        <ul class="grid">
            {
                series.map(async ({id, data}) => {
                    return (
                        <li>
                            <a href={`/series/${id}`}>
                                <img alt="Cover" src="/img/series-hero.svg" height="200"/>
                                <h3>{data.title}</h3>
                                <p>{data.description}</p>
                            </a>
                        </li>
                    )
                })
            }
        </ul>
    </main>
</Layout>

<style lang="scss">
    @use "../../styles/util.scss";

    main {
        padding: 2em;
        .hero {
            background-color: var(--article-color);
            border: 4px solid var(--emphasis-color);
            box-shadow: util.extrude(10);
            padding: 1em;
            font-size: 18px;
            margin: 1rem 0;
            h1 {
                margin: 1rem 0;
            }
        }
        .grid {
            display: grid;
            gap: 16px;
            grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));
            padding: 0 3rem;
            margin: 0;
            li {
                display: block;
                background-color: var(--article-color);
                border: 2px solid var(--emphasis-color);
                box-shadow: util.extrude(8);
                padding: 0;
                margin: 0;
                a {
                    width: 100%;
                    height: 100%;
                    display: block;
                    h3, p {
                        margin: 0.5rem 1rem;
                        color: var(--emphasis-color);
                    }
                    p {
                        display: -webkit-box;
                        -webkit-line-clamp: 3;
                        -webkit-box-orient: vertical;
                        overflow: hidden;
                    }
                    img {
                        width: 100%;
                        object-fit: cover;
                    }
                }
            }
        }
    }
</style>