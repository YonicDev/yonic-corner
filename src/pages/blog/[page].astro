---
import type { Page } from "astro";
import { type CollectionEntry, getCollection } from "astro:content";

import { filterPosts, getHeroImages, sortPosts } from '@lib/util';
import { BLOG_PAGE_SIZE } from "@lib/settings";

import Layout from "@lib/layouts/Layout.astro";
import PostListing from "@lib/layouts/PostListing.svelte";
import CategoryButtons from "@lib/components/CategoryButtons.svelte";

export async function getStaticPaths({paginate}: {paginate: any}) {
    const posts = (await getCollection('blog')).filter(filterPosts).sort(sortPosts);
    return paginate(posts, { pageSize: BLOG_PAGE_SIZE});
}

const { page } = Astro.props;
const posts = page.data;

const heroImages = await getHeroImages(posts);

interface Props {
    page: Page<CollectionEntry<"blog">>
}

---

<Layout title={`All posts - Page ${page.currentPage}`} description="Browse all the posts from my blog." keywords={["blog", "posts", "navigation", "list", "index"]}>
    <main class="main-container">
        <CategoryButtons />
        <PostListing posts={posts.filter(post => import.meta.env.DEV || !post.data.draft)} {heroImages} currentPage={page.currentPage} lastPage={page.lastPage} baseUrl="/blog" />
    </main>
</Layout>