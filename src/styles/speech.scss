@use 'sass:list';

$speech-colors: ("yonic": #0071aa #00eeff black, "raxki": #da1515 #2c0505 #ff9494);

@mixin speech {
    @each $theme, $colors in $speech-colors {
        $outline-color: list.nth($colors, 1);
        $fill-color: list.nth($colors, 2);
        $text-color: list.nth($colors, 3);

        &.#{$theme} {
            color: $text-color;
            background-color: $fill-color;
            border-color: $outline-color;
            .triangle {
                .static polyline {
                    stroke: #{$outline-color};
                    fill: #{$fill-color};
                }
                .animated polygon {
                    fill: #{$outline-color};
                }
            }
        }
    }
}

$fill-color: #ececec;
$outline-color: black;
$text-color: black;

.speech {
    @include speech;

    display: block;
    flex-grow: 1;
    background-color: $fill-color;
    position: relative;
    padding: 2rem;
    border: 4px solid #{$outline-color};
    margin-bottom: 3rem;
    border-radius: 24px;
    overflow: visible;
    box-sizing: content-box;
    min-width: 0;
    filter: drop-shadow(4px 4px 0px rgba(0,0,0,0.25));

    .triangle {
        position: absolute;
        z-index: 1;
        .static {
            position: absolute;
            left: 0;
            top: 0;
            polyline {
                stroke: #{$outline-color};
                fill: #{$fill-color};
                stroke-width: 4px;
                stroke-linejoin: round;
            }
        }
        .animated {
            position: absolute;
            z-index: 1;
            polygon {
                fill: #{$outline-color};
            }
        }
    }

    & p:first-of-type {
        margin-top: 0;
    }
    & p:last-child {
        margin-bottom: 0;
    }

    /** Positions **/

    &.bottom .triangle {
        top: 100%;
        .animated {
            animation: speecher 0.333s linear alternate infinite;
        }
    }
    
    &.bottom.near .triangle {
        left: calc(32px);
    }

    &.bottom.far .triangle {
        right: calc(32px + 48px);
    }

    &.bottom.center .triangle {
        left: 50%;
        transform: translateX(-50%);
    }
}

.speech-container {
    display: flex;
    gap: 1rem;
    &.near {
        align-items: flex-start;
    }
    &.center {
        align-items: center;
    }
    &.far {
        align-items: flex-end;
    }
    br {
        display: none;
    }
}

@keyframes speecher {
    0% {
        top: 0px;
    }
    100% {
        top: -16px;
    }
}