---
import Component from "./Youtube.svelte";

interface Props {
    id: string;
    title?: string;
    description?: string;
    instance: string;
    duration?: `${number}:${number}`;
}
const {id, instance, description} = Astro.props;
let title: Props["id"];
let duration: Props["duration"];

let videoData: {
    title: string,
    description: string,
    lengthSeconds: number
}

async function fetchVideoData(): Promise<Partial<typeof videoData>> {
    if(videoData)
        return videoData;
    else {
        try {
            const req = `${instance}/api/v1/videos/${id}?fields=title,lengthSeconds,description`
            const res = await fetch(req);
            if(res.ok) {
                videoData = await res.json();
                return videoData;
            }
            else {
                return {};
            }
        } catch {
            return {};
        }
    }
}

function secondsToTimestamp(seconds: number) {
    return [Math.floor(seconds/60), seconds % 60].join(":") as `${number}:${number}`;
}

async function getDuration() {
    const data = await fetchVideoData();
    return data?.lengthSeconds ? secondsToTimestamp(data.lengthSeconds) : undefined;
}

title = Astro.props.title ?? ((await fetchVideoData())?.title ?? "Could not get video title");
duration = Astro.props.duration ?? await getDuration();
---
<noscript>
    <Component {instance} {id} {title} {duration} {description} noJs />
    <style is:inline>
        .video-js { display: none!important }
    </style>
</noscript>
<Component client:visible {instance} {id} {title} {duration} {description} />