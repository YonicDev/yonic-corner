---
import Code from './Code.astro';
import type { BuiltinLanguage, LanguageRegistration, SpecialLanguage } from 'shiki';

import { parseMeta, lineHighlightTransformer, squigglyLinesTransformer, betterCommentsTransformer } from '@lib/shiki';

type CodeLanguage = BuiltinLanguage | SpecialLanguage | LanguageRegistration;

type Props = {
    code: string,
    lang?: CodeLanguage,
    filename?: string,
    [x: string]: string | CodeLanguage | undefined,
}

const { code, lang, filename: rawFilename, ...meta } = Astro.props;
const filename = rawFilename?.trim();

const buttonLabel = "Copy code";

const transformers = [
    parseMeta(),
    lineHighlightTransformer(),
    squigglyLinesTransformer(),
    betterCommentsTransformer(),
]
---
<div class="code-block" data-button-label={buttonLabel}>
    {
        filename && filename !== "-" &&
        <span class="filename">
            <span class="icon"></span>
            {filename}
        </span>
    }
    <div>
        <Code {code} {lang} {transformers} theme="min-light" meta={meta as Record<string, string|undefined>} />
    </div>
</div>
<div class="code-block dark" data-button-label={buttonLabel}>
    {
        filename && filename !== "-" &&
        <span class="filename">
            <span class="icon"></span>
            {filename}
        </span>
    }
    <div>
        <Code {code} {lang} {transformers} theme="poimandres" meta={meta as Record<string, string|undefined>}/>
    </div>
</div>
<div class="code-block legacy" data-button-label={buttonLabel}>
    {
        filename && filename !== "-" &&
        <span class="filename">
            <span class="icon"></span>
            {filename}
        </span>
    }
    <div>
        <Code {code} {lang} {transformers} theme="min-dark" meta={meta as Record<string, string|undefined>}/>
    </div>
</div>

<style>
    .code-block {
        position: relative;
    }
    .code-block.dark {
        display: none;
    }
</style>

<script>
    const blocks: NodeListOf<HTMLDivElement> = document.querySelectorAll(".code-block > div");

    blocks.forEach((block) => {
        if(navigator.clipboard) {
            const button = document.createElement("button");
            button.classList.add("code-button");
            button.innerText = block.dataset.buttonLabel ?? "Copy code";
            block.appendChild(button);

            button.addEventListener("click", () => {
                copyCode(block, button);
            })
        }
    })

    async function copyCode(block: HTMLDivElement, button: HTMLButtonElement) {
        let code = block.querySelector("code") as HTMLPreElement;
        let text = code.innerText;

        await navigator.clipboard.writeText(text);

        // visual feedback that task is completed
        button.innerText = "Copied to clipboard!";

        setTimeout(() => {
            button.innerText = block.dataset.buttonLabel ?? "Copy code";
        }, 700);
    }
</script>