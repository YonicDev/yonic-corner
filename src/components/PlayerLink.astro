---
import { getEntry } from "astro:content";
import { getImage } from "astro:assets";
import path from "path";

interface Props {
    id: string;
}

const osPath = process.platform === 'win32' ? path["win32"] : path["posix"];

const id = Astro.props.id.split("/").join(osPath.sep);

const {id: musicId, data: music} = (await getEntry('music', id))!;

const coverImport = music.cover != null ? (await import(`../assets/covers/${music.cover}.png`)).default as ImageMetadata : null;
const coverImage = coverImport != null ? await getImage({src: coverImport, width: 100, height: 100, format: "webp"}) : null;

---


<a class="playerLink music" href={`/player/${musicId.replaceAll("\\", "/")}`} target="music-player" aria-hidden="true">
    <div class="cover" style={`background-image: url(${coverImage?.src ?? "/img/icons/music.svg"})`}>
        <div class="playIcon">
            <img alt="Play" src="/img/icons/play.svg"/>
        </div>
    </div>
    <div class="metadata">
        <span><b><u>Music:</u> {music.title}</b></span>
        <span>{[music.album, music.author].filter(field => field != null).join(" | ")}</span>
    </div>
</a>