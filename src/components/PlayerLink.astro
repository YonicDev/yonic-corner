---
import SongsList from "@lib/song-list";
import { getImage } from "astro:assets";

interface Props {
    id: string;
}

const { id } = Astro.props;

const music = SongsList[id]!;

const coverImport = music.cover != null ? (await import(`../assets/covers/${music.cover}.png`)).default as ImageMetadata : null;
const coverImage = coverImport != null ? await getImage({src: coverImport, width: 100, height: 100, format: "webp"}) : null;

---


<a class="playerLink music" href={`/player/${id}`} target="music-player" aria-hidden="true">
    <div class="cover" style={`background-image: url(${coverImage?.src ?? "/img/icons/music.svg"})`}>
        <div class="playIcon">
            <img alt="Play" src="/img/icons/play.svg"/>
        </div>
    </div>
    <div class="metadata">
        <span><b><u>Music:</u> {music.title}</b></span>
        <span>{[music.album, music.author].filter(field => field != null).join(" | ")}</span>
    </div>
</a>

<style lang="scss">
    @use "../styles/util.scss";

    .playerLink {
        @media screen and (orientation: portrait) and (min-width: 768px) and (-webkit-max-device-pixel-ratio: 1), 
        screen and (orientation: landscape) and (min-width: 1024px) {
            display: flex;
        }    

        display: none;
        text-decoration: none;
        overflow: hidden;
        box-sizing: border-box;
        border: 4px solid var(--emphasis-color);
        box-shadow: util.extrude(8);

        .cover {
            width: 64px;
            height: 64px;
            background-color: var(--nav-color-dark);
            border-right: 0.25rem solid var(--emphasis-color);
            position: relative;
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;

            .playIcon {
                display: flex;
                width: 100%;
                height: 100%;
                align-items: center;
                justify-content: center;
                backdrop-filter: blur(5px);
                opacity: 0;
                transition: all 0.2s ease-out;
                overflow: hidden;
                img {
                    width: 16px;
                    margin: 0;
                    transition: inherit;
                }
            }
        }

        &:hover .playIcon, &:focus .playIcon {
            opacity: 1;
            img {
                width: 32px;
            }
        }

        .metadata {
            padding: 0.5rem;
            display: flex;
            flex-grow: 1;
            flex-direction: column;
            justify-content: center;
            background-color:var(--base-color);
            color:var(--emphasis-color);
        }
    }
</style>