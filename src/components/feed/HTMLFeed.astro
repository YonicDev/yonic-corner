---
import { getImage } from 'astro:assets';
import type { GetImageResult } from 'astro';

import {load} from 'cheerio';

import "@lib/styles/article.scss";

interface Props {
    post: string,
}

const { post } = Astro.props;

let finalHtml = "";

const html = await Astro.slots.render("html");
let $ = load(html, null, false);
const feedHtml = $(".feed-preview").html();
if(feedHtml) {
    $ = load(feedHtml, null, false);
    $(".playerLink, .chara-wrapper, .triangle").remove();
    $(".speech-container").each(function() {
        const charaName = $(this).attr("data-chara-name");
        if(charaName==null) return;
        const firstLine = $(this).find(".speech p").html();
        $(this).find("p").first().html(`<b>${charaName}:</b>${firstLine}`);
    })
    $("p").each(function() {
        $(this).html($(this).html()!.replaceAll(/\n|\s\n/g, " "))
    })
    finalHtml = $.html();
}

/**
 * Gets the hero image.
 * 
 * The hero image has to be named "hero.png" and be located in a folder named the same way
 * as the target article inside the assets/articles folder.
 * It doesn't need to be a PNG image, other formats are supported.
 */
async function getHeroImage(): Promise<GetImageResult | null> {
    try {
        const {default: src} = await import(`../../assets/articles/${post}/hero.png`);
        return getImage({src, width: 768, format: "jpg", quality: 80});
    } catch {
        return null;
    }
}

const hero = await getHeroImage();

---
{hero && <figure><img alt="Cover image" src={import.meta.env.SITE + hero.src} /><figcaption></figcaption></figure>}
<Fragment set:html={finalHtml} />
<a href={import.meta.env.SITE + "/blog/article/" + post}>Continue reading &rarr;</a>
